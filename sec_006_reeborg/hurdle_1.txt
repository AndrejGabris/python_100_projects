# for robot movement via website: https://reeborg.ca/reeborg.html

# Overcome an obstacles 


def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump():
    move()
    turn_left()
    move()
    turn_right()
    move()
    turn_right()
    move()
    turn_left()
           
# foor loop          
for step in range(6):
    jump()


# while loop
number_of_hurdles = 6
while number_of_hurdles > 0:
    jump()
    number_of_hurdles -= 1
    print(number_of_hurdles)

jump()
while at_goal() == False:
    jump()


while not at_goal():
    if front_is_clear():
        move()
    else:
        jump()

# ----------------------------------------------------------------------------------------------------------------------------
# hurdle 4 
        
        def turn_right():
    turn_left()
    turn_left()
    turn_left()

def jump():
    turn_left()
    while not right_is_clear():
        move()
    turn_right()
    move()
    turn_right()
    while not wall_in_front():
        move()
    turn_left()

while not at_goal():
    if front_is_clear():
        move()
    else:
        jump()

# ----------------------------------------------------------------------------------------------------------------------------
# maze
        
def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
while front-is_clear():
    move()
turn_left()

while not at_goal():
    if right_is_clear():
        turn_right()
        move()
    elif front_is_clear():
        move()
    else:
        turn_left()